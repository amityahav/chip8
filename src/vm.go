package src

type VM struct {
	screen     [32][8]byte // 32x64 bitmap
	memory     [4096]byte
	stack      [16]uint16
	registers  [16]byte
	dt, st, sp byte
	pc, I      uint16
}

func (vm *VM) init(bytes []byte) {
	vm.loadROM(bytes)
	vm.pc = 0x200
}

func (vm *VM) loadROM(bytes []byte) {
	for i, b := range bytes {
		vm.memory[0x200+i] = b
	}
}

func (vm *VM) initSprites() {
	sprites := [16][5]byte{
		{0xF0, 0x90, 0x90, 0x90, 0xF0}, // "0"
		{0x20, 0x60, 0x20, 0x20, 0x70}, // "1"
		{0xF0, 0x10, 0xF0, 0x80, 0xF0}, // "2"
		{0xF0, 0x10, 0xF0, 0x10, 0xF0}, // "3"
		{0x90, 0x90, 0xF0, 0x10, 0x10}, // "4"
		{0xF0, 0x90, 0xF0, 0x10, 0xF0}, // "5"
		{0xF0, 0x90, 0xF0, 0x90, 0xF0}, // "6"
		{0xF0, 0x10, 0x20, 0x40, 0x40}, // "7"
		{0xF0, 0x90, 0xF0, 0x90, 0xF0}, // "8"
		{0xF0, 0x90, 0xF0, 0x10, 0xF0}, // "9"
		{0xF0, 0x90, 0xF0, 0x90, 0x90}, // "A"
		{0xE0, 0x90, 0xE0, 0x90, 0xE0}, // "B"
		{0xF0, 0x80, 0x80, 0x80, 0xF0}, // "C"
		{0xE0, 0x90, 0x90, 0x90, 0xE0}, // "D"
		{0xF0, 0x80, 0xF0, 0x80, 0xF0}, // "E"
		{0xF0, 0x80, 0xF0, 0x80, 0x80}, // "F"
	}

	for row, sprite := range sprites {
		for col, b := range sprite {
			vm.memory[row*len(sprite)+col] = b
		}
	}
}
